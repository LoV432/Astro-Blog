---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import PostImage from '../../components/PostImage.astro';
import { API } from '../../config';
const { slug } = Astro.params;
import { marked } from '../../../node_modules/marked';
import DOMPurify from 'isomorphic-dompurify';
import hljs from 'highlight.js/lib/common'
import 'highlight.js/styles/github-dark.css';
var posts  =  await fetch(API + '/api/posts/?filters[slug][$eq]='+ slug + '&fields[0]=heading&fields[1]=publishedAt&fields[2]=slug&fields[3]=updatedAt&fields[4]=content&fields[5]=description&populate[cover][fields][0]=formats&populate[cover][fields]=url').then(res => res.json())
if (!posts.data[0]){
  	return Astro.redirect('/404');
}
const post = posts.data[0].attributes

marked.setOptions({ 
  renderer: new marked.Renderer(),
  highlight: function(code, lang) { // Syntax highlighting
    const language = hljs.getLanguage(lang) ? lang : 'plaintext';
    return hljs.highlight(code, { language }).value;
  },
  langPrefix: 'hljs language-',
  smartypants: true,
});

const content = DOMPurify.sanitize(marked.parse(post.content));
const options= {
	dateStyle: 'short',
	timeStyle: 'short'
}
---

<!DOCTYPE html>
<html lang="en" class=" bg-[#121212] text-zinc-200">
	<BaseHead title={post.heading} description={post.description} image={"/images.jpg?src=" + post.cover.data.attributes.formats['thumbnail'].url} />
	<body>
		<div class="min-h-screen grid grid-rows-[auto,1fr,auto]">
			<Header />
			<main class="place-self-center">
				<section class="mt-10 px-6 md:px-0 w-full md:w-[45rem] lg:w-[55rem]">
					<div class="pb-6 md:min-h-[459px] min-h-[250px]">
						<PostImage imageObject={post.cover.data.attributes} classes={"rounded-md w-full h-full object-cover border-2 border-rose-800 flex place-items-center justify-center"} size={"large"} alt={"Heading Image"}/>
					</div>
					<div>
						{//@ts-ignore
						post.publishedAt && <time>Published on: {new Date(post.publishedAt).toLocaleString('en-US', options) }</time>}
						{//@ts-ignore
						post.updatedAt && <div>Last updated on: <time>{new Date(post.updatedAt).toLocaleString('en-US', options)}</time></div>}
					</div>
				</section>
				<section class="mt-14 px-6 md:px-0 w-full md:w-[45rem] lg:w-[55rem]">
					<article class="mt-5 prose prose-md md:prose-xl prose-invert max-w-fit" set:html={content} />
				</section>
				
			</main>
			<Footer />
		</div>
	</body>
</html>
