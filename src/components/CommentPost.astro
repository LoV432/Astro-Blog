<section class="place-self-center mt-20 py-6 w-[90%] md:w-[45rem] lg:w-[55rem] border-y-2 border-rose-800 rounded" aria-label="Post Comment Section">
	<div class="collapse collapse-plus rounded-box">
		<input aria-label="Show/Hide Post Comment Section" type="checkbox" />
		<div class="collapse-title text-xl font-medium">Write a comment</div>
		<div role="form" class="collapse-content">
			<div class="form-control">
				<label class="label">
					<span class="label-text">Your Name</span>
				</label>
				<label class="input-group">
					<span class="w-20 justify-center">Name</span>
					<input id="commenter-name" type="text" placeholder="Chloe Walker" class="input input-bordered" />
				</label>

				<label class="label">
					<span class="label-text">Your Email</span>
				</label>
				<label class="input-group">
					<span class="w-20 justify-center">Email</span>
					<input id="commenter-email" type="text" placeholder="info@site.com" class="input input-bordered" />
				</label>

				<label class="label">
					<span class="label-text">Your Comment</span>
				</label>
				<label class="input-group">
					<textarea style="border-radius: 0.75rem !important;" id="commenter-comment" class="textarea textarea-bordered h-44 w-full text-xl" placeholder="What's on your mind?"></textarea>
				</label>
				<div>
					<button id="postComment" class="btn btn-outline btn-square disabled:text-base disabled:font-bold disabled:bg-zinc-800 disabled:hover:bg-zinc-800 border-rose-800 hover:border-rose-800 hover:bg-rose-900 text-rose-700 hover:text-white mt-6 w-32">SEND</button>
					<p id="fieldsRequired" style="opacity: 0;" class="mt-5 sm:inline-block sm:ml-5">All Fields Are Required!</p>
				</div>
			</div>
		</div>
	</div>
</section>

<script>
	const ascii = ['‡´Æ‚∏ù‚∏ù> Ã´ <‚∏ù‚∏ù ·Éê', '(,,>Ôπè<,,)', '(>·éë<‡πë)/‚ô°', '(„Å§‚âßÔπè‚â¶)', ' ‡´Æ‚ÇçÀ∂ ‚Ä¢. ‚Ä¢ ‚ëÖ‚Çé·Éê ‚ô°', '‡´Æ( ‡πë·µî ·µï ·µî‡πë )·Éê', '‚âßÔπè‚â¶', '(‚úøÀµ‚Ä¢ÃÅ·¥ó‚Ä¢ÃÄÀµ)', '(Íàç‚ó°Íàçüå∏)', '(‚Ä¢‚ó°‚Ä¢üå∏)‚ô°'];
	document.querySelector('#postComment').addEventListener('click', async () => {
		const postButton: HTMLButtonElement = document.querySelector('#postComment');
		const nameElement: HTMLInputElement = document.querySelector('#commenter-name');
		const emailElement: HTMLInputElement = document.querySelector('#commenter-email');
		const commentElement: HTMLInputElement = document.querySelector('#commenter-comment');

		const name = nameElement.value.replace(/["]/g, '\\$&').replace(/\n/g, '\\n'); // Escape all "" and spaces
		const email = emailElement.value.replace(/["]/g, '\\$&').replace(/\n/g, '\\n'); // Escape all "" and spaces
		const comment = commentElement.value.replace(/["]/g, '\\$&').replace(/\n/g, '\\n'); // Escape all "" and spaces
		if (name === '' || email === '' || comment === '') {
			document.querySelector<HTMLElement>('#fieldsRequired').style.opacity = '100';
			postButton.innerText = ascii[Math.floor(Math.random() * ascii.length)];
			return 0;
		}
		document.querySelector<HTMLElement>('#fieldsRequired').style.opacity = '0';
		postButton.innerText = '';
		postButton.classList.add('loading');
		const id = document.querySelector('body').dataset.post_id;
		const options = {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: '{"post_id":"' + id + '","name":"' + name + '","email":"' + email + '","comment":"' + comment + '"}'
		};
		let response = await window.fetch('/blog/comment', options);
		let status = response.status;
		postButton.classList.remove('loading');
		if (status != 200) {
			postButton.classList.add('shake-little', 'shake-constant', 'disabled:text-rose-800', 'disabled:hover:text-rose-800');
			postButton.innerText = 'Failed!';
			postButton.disabled = true;
			setTimeout(() => {
				postButton.classList.remove('shake-little', 'shake-constant');
			}, 400);
		} else {
			[nameElement.value, emailElement.value, commentElement.value] = ['', '', '']; // Clear all text fields
			postButton.classList.add('disabled:text-green-800', 'disabled:hover:text-green-800');
			postButton.innerText = 'Posted!';
			postButton.disabled = true;
		}
		setTimeout(() => {
			postButton.innerText = 'SEND';
			postButton.disabled = false;
		}, 10000);
	});
</script>

<style>
	/*! * * * * * * * * * * * * * * * * * * * *\  
  CSShake :: shake-little
  v1.5.0
  CSS classes to move your DOM
  (c) 2015 @elrumordelaluz
  http://elrumordelaluz.github.io/csshake/
  Licensed under MIT
\* * * * * * * * * * * * * * * * * * * * */
	.shake-little {
		transform-origin: center center;
	}

	.shake-freeze,
	.shake-constant.shake-constant--hover:hover,
	.shake-trigger:hover .shake-constant.shake-constant--hover {
		animation-play-state: paused;
	}

	.shake-freeze:hover,
	.shake-trigger:hover .shake-freeze,
	.shake-little:hover,
	.shake-trigger:hover .shake-little {
		animation-play-state: running;
	}

	@keyframes shake-little {
		2% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		4% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		6% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		8% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		10% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		12% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		14% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		16% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		18% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		20% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		22% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		24% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		26% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		28% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		30% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		32% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		34% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		36% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		38% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		40% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		42% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		44% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		46% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		48% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		50% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		52% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		54% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		56% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		58% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		60% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		62% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		64% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		66% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		68% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		70% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		72% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		74% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		76% {
			transform: translate(0px, 1px) rotate(0.5deg);
		}
		78% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		80% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		82% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		84% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		86% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		88% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		90% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		92% {
			transform: translate(1px, 1px) rotate(0.5deg);
		}
		94% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		96% {
			transform: translate(1px, 0px) rotate(0.5deg);
		}
		98% {
			transform: translate(0px, 0px) rotate(0.5deg);
		}
		0%,
		100% {
			transform: translate(0, 0) rotate(0);
		}
	}

	.shake-little:hover,
	.shake-trigger:hover .shake-little,
	.shake-little.shake-freeze,
	.shake-little.shake-constant {
		animation-name: shake-little;
		animation-duration: 100ms;
		animation-timing-function: ease-in-out;
		animation-iteration-count: infinite;
	}
</style>
